<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Arguments Object và Three dots trong JavaScript</title>
      <link href="/2018/05/06/Arguments-Object-va-Three-dots-trong-javascript/"/>
      <url>/2018/05/06/Arguments-Object-va-Three-dots-trong-javascript/</url>
      <content type="html"><![CDATA[<h1 id="Chuyen-ve-“…”-hay-Three-dots-trong-ES6"><a href="#Chuyen-ve-“…”-hay-Three-dots-trong-ES6" class="headerlink" title="Chuyện về  “…” hay Three dots trong  ES6"></a>Chuyện về  “…” hay Three dots trong  ES6</h1><p>Nếu bạn mới tìm hiểu về các tính năng mới của ES6 thì chắc bạn đã từng nghe qua về khái niệm spread syntax ( cú pháp lan tràn ) . Nó là một trong nhưng tính năng khá là khó nhai cho  người mới .<br>Để  hiểu bước đầu ta cần tìm hiểu về arguments object trước .</p><h2 id="Arguments-Object"><a href="#Arguments-Object" class="headerlink" title="Arguments Object"></a>Arguments Object</h2><h3 id="Argument-Object-la-gi"><a href="#Argument-Object-la-gi" class="headerlink" title="Argument Object là gì"></a>Argument Object là gì</h3><p> Argument Object là một mảng ,giống như object ( Nó không mang các method như 1 mảng ). Dùng để truyển đối số và function .</p><p>Argument Object là 1 biến cục bộ bên trong tất cả các functions (non-arrow).<br>Bạn có thể tham chiếu đến argument bên trong 1 function thông qua  <code>arguments</code> . Bạn có thể tham chiếu đến các argument được truyền vào qua index (Tương tự mảng ) . Tất nhiên index bắt đầu từ 0.</p><p>Ta có 1 ví dụ :</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">One</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> one = <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> two = <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">console</span>.log(one+two); <span class="comment">//5</span></span><br><span class="line">    <span class="built_in">arguments</span>[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// the arguments can also be set.</span></span><br><span class="line">    <span class="built_in">console</span>.log(one+two); <span class="comment">//6</span></span><br><span class="line">&#125;</span><br><span class="line">One(<span class="number">1</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>Mình có chút lưu ý :</p><blockquote><p>arguments không phải là một mảng . Nó chỉ giống mảng . Và tất nhiên nó không mang bất cứ tính thuộc tính nào của mảng . Trừ <code>length</code> . Ta cũng có thể convert nó sang 1 mảng như sau :</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>);</span><br></pre></td></tr></table></figure><p>Và <code>arguments</code> who are you?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">arguments</span>);</span><br><span class="line"><span class="comment">//object</span></span><br></pre></td></tr></table></figure><h2 id="Three-dots"><a href="#Three-dots" class="headerlink" title="Three dots"></a>Three dots</h2><p>Bên trên chúng ta đã cùng nhau tìm hiểu về khái niệm <code>arguments</code> và bản chất của nó . Tiếp theo chúng ta sẽ tìm hiểu về three dots hay rest parameters , spread syntax .</p><h3 id="Rest-parameters"><a href="#Rest-parameters" class="headerlink" title="Rest parameters"></a>Rest parameters</h3><p> rest parameter cho phép chúng ta đại diện vô hạn tham số truyền vào function như một <code>mảng</code> .</p><p>Ví dụ :</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Two</span>(<span class="params">a,b,...args</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> c=a*b;</span><br><span class="line">    args.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span><br><span class="line">        c+=item;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(c);</span><br><span class="line">&#125;</span><br><span class="line">Two(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>); <span class="comment">//20</span></span><br></pre></td></tr></table></figure><p>Ngoài ra chúng ta còn có thể  :</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Three</span>(<span class="params">...[a,b,c]</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a * b * c;</span><br><span class="line">&#125;</span><br><span class="line">Three(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">//6</span></span><br></pre></td></tr></table></figure><p>Ví dụ trên được gọi là : Destructing rest parameters</p><h4 id="Khac-biet-giua-arguments-va-rest-parameter-la-gi"><a href="#Khac-biet-giua-arguments-va-rest-parameter-la-gi" class="headerlink" title="Khác biệt giữa arguments và rest parameter là gì ?"></a>Khác biệt giữa <code>arguments</code> và <code>rest parameter</code> là gì ?</h4><pre><code>1. rest parameters không được cho 1 cái tên riêng  trong khi đó `arguments` object chứa tất cả tham số được truyền tới function .2. `arguments` không thưc sự là 1 mảng trong khi rest params là 1 thực thể của `Array` nghĩa là nó chứa tất cả methods chả hạn như : sort , map , splice, v.v .3. `arguments` object có  những function của riêng nó . `callee` property .</code></pre><h3 id="Spread-systax"><a href="#Spread-systax" class="headerlink" title="Spread systax"></a>Spread systax</h3><p><code>Spread syntax</code> cho phép lặp lại việc phân giải dữ liệu ra 1 nơi nào đó như là 1 biểu thức mảng hoặc string được mở rộng ở nơi không có hoặc nhiều tham số ( trong lời gọi hàm ) hoặc nhiều phần tử  ( trong array lierals) hoặc 1 biểu thức đối tượng được mở rộng ở nơi không có hay có nhiều dữ liệu dạng key-value (trong object literals).</p><h4 id="Cu-phap"><a href="#Cu-phap" class="headerlink" title="Cú pháp"></a>Cú pháp</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lời gọi hàm </span></span><br><span class="line"><span class="comment">// dữ liệu trong args được điền vào các tham số của hàm.</span></span><br><span class="line">Four(...args);</span><br><span class="line"></span><br><span class="line"><span class="comment">//mảng literals hay string</span></span><br><span class="line">[...args,<span class="number">1</span>,<span class="number">2</span>,<span class="string">'a'</span>,<span class="string">'four'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// hay object</span></span><br><span class="line"><span class="keyword">let</span> objC = &#123; ...obj &#125;;</span><br></pre></td></tr></table></figure><h4 id="Vi-du"><a href="#Vi-du" class="headerlink" title="Ví dụ"></a>Ví dụ</h4><p>Mình có 1 vài ví dụ cho sự tiện lợi của three dots</p><p>Việc truyền tham số dưới dạng mảng vào 1 hàm trước đây khá là cồng kềnh thì ở ES6 ta đã có thể làm ngắn gọn hơn rất nhiều.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Five</span>(<span class="params">a,b,c</span>)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> args = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="number">1</span>];</span><br><span class="line">Five.apply(<span class="literal">null</span>, args); <span class="comment">//old</span></span><br><span class="line"></span><br><span class="line">Five(..args); <span class="comment">//new</span></span><br></pre></td></tr></table></figure><p>Chúng ta thực sự không thể sử dụng apply cho việc khởi tạo 1 đối tượng nào đó . Vì apply thực hiện 1 lời gọi chứ không phải là 1 contruct như mong muốn . Nhưng  chúng ta có thể  sử dụng spread syntax :</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> date = [<span class="number">1970</span>, <span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(..date);</span><br></pre></td></tr></table></figure><p>Với mảng thì sao ???</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parts = [<span class="string">'a'</span>,<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">var</span> alpha = [..parts, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line">[...parts,...alpha];</span><br></pre></td></tr></table></figure><p>Với object ??</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">foo</span>: <span class="string">'bar'</span>, <span class="attr">x</span>:<span class="number">42</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> obj1 = &#123; <span class="attr">foo</span> :<span class="string">'baz'</span>, <span class="attr">y</span>:<span class="number">13</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> clone = &#123; ...obj &#125;;</span><br><span class="line"><span class="comment">//Object&#123; foo:"bar", x: 42&#125;</span></span><br><span class="line"><span class="keyword">var</span> merge = &#123;...obj, ...obj1 &#125;;</span><br><span class="line"><span class="comment">//Object&#123; foo:"baz",x:42, y: 13 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="Ket-thuc"><a href="#Ket-thuc" class="headerlink" title="Kết thúc"></a>Kết thúc</h3><p>Qua bài viết chúng ta đã được tìm hiểu về  <code>arguments</code> và three dots</p>]]></content>
      
      <categories>
          
          <category> .. </category>
          
          <category> _drafts </category>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> three dots </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Chứng Khoán </title>
      <link href="/2018/04/30/Chung-khoan/"/>
      <url>/2018/04/30/Chung-khoan/</url>
      <content type="html"><![CDATA[<h1 id="Bai-toan-chung-khoan"><a href="#Bai-toan-chung-khoan" class="headerlink" title="Bài toán chứng khoán"></a>Bài toán chứng khoán</h1><h2 id="De-bai"><a href="#De-bai" class="headerlink" title="Đề bài :"></a>Đề bài :</h2><blockquote><p>Cho trước lịch sử giao dịch của một mã chứng khoán trong n ngày. Hãy xác định k1 ngày có giá thấp nhất và k2 ngày có giá cao nhất.</p></blockquote><h2 id="Input"><a href="#Input" class="headerlink" title="Input :"></a>Input :</h2><blockquote><p>Mỗi bộ test gồm 2 dòng<br>Dòng 1 ghi 3 số n, k1, k2 với n&lt;=106. k1+k2&lt;=n và k1,k2&lt;=100.<br>Dòng tiếp theo ghi n số nguyên theo thứ tự là giá của mã chứng khoán trong n ngày liên tiếp.<br>Bộ test cuối cùng chứa 3 số 0</p></blockquote><h2 id="Output"><a href="#Output" class="headerlink" title="Output :"></a>Output :</h2><blockquote><p>Với mỗi bộ test, ghi ra màn hình 3 dòng gồm:<br>Dòng 1 ghi số thứ tự bộ test<br>Dòng 2 ghi k1 ngày có giá thấp nhất theo thứ tự các ngày tăng dần. Nếu có nhiều danh sách cho kết quả giống nhau thì chọn danh sách thấp nhất theo thứ tự từ điển.<br>Dòng 3 ghi k2 ngày có giá cao nhất theo thứ tự các ngày giảm dần. Nếu có nhiều danh sách cho kết quả giống nhau thì chọn danh sách cao nhất theo thứ tự từ điển.</p></blockquote><h2 id="Example"><a href="#Example" class="headerlink" title="Example :"></a>Example :</h2><table><thead><tr><th>Input</th><th>Output</th></tr></thead><tbody><tr><td>10 3 2</td><td>Case 1</td></tr><tr><td>1 2 3 4 5 6 7 8 9 10</td><td>1 2 3</td></tr><tr><td>10 3 2</td><td>10 9</td></tr><tr><td>10 9 8 7 6 5 4 3 2 1</td><td>Case 2</td></tr><tr><td>0 0 0</td><td>8 9 10</td></tr><tr><td></td><td>2 1</td></tr></tbody></table><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution :"></a>Solution :</h2><p> Bài này có khá nhiều cách giải . Nhưng mình sẽ giải theo cách nhanh gọn nhất .</p><ol><li>Sắp xếp mảng theo chỉ số  chứng khoán ( từ nhỏ đến lớn ) . Bạn chú ý nếu  chỉ số  bằng nhau thì ta sẽ xét tiếp đến ngày tăng dần .</li><li>Bạn có thể chia thành 2 mảng con hoặc duyệt trực tiếp trên mảng mẹ đều được</li><li>Sắp xếp mảng thứ nhất ( k1 ngày nhỏ nhất ) theo ngày tăng</li><li>Sắp xếp mảng thứ 2 ( k2 ngày lớn nhất ) theo ngày giảm</li></ol><h2 id="Code"><a href="#Code" class="headerlink" title="Code :"></a>Code :</h2><p> Đây là mã nguồn mình viết : ngôn ngữ C++ .</p><p> <a href="http://www.spoj.com/PTIT/problems/PTIT123C/" target="_blank" rel="noopener">Link SPOJ </a><br> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ck</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="keyword">int</span> date;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">sort_value</span><span class="params">(ck a,ck b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.value==b.value)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.date&lt;b.date)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(a.value &lt; b.value)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">sort_date_greater</span><span class="params">(ck a,ck b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.date&lt;b.date;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">sort_date_less</span><span class="params">(ck a,ck b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.date&gt;b.date;</span><br><span class="line">&#125;</span><br><span class="line">ck arr[<span class="number">999999</span>],a[<span class="number">100000</span>],b[<span class="number">100000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> test=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,k1,k2;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k1&gt;&gt;k2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;k1==<span class="number">0</span>&amp;&amp;k2==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case "</span>&lt;&lt;++test&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;arr[i].value;</span><br><span class="line">            arr[i].date=i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sort(arr,arr+n,sort_value);</span><br><span class="line">        copy(arr,arr+k1,a);</span><br><span class="line">        copy(arr+n<span class="number">-1</span>-k2,arr+n,b);</span><br><span class="line">        sort(a,a+k1,sort_date_greater);</span><br><span class="line">        sort(b,b+k2,sort_date_less);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k1;i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i].date+<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k2;i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;b[i].date+<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sort </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Quick Sort</title>
      <link href="/2018/04/06/Quick-Sort/"/>
      <url>/2018/04/06/Quick-Sort/</url>
      <content type="html"><![CDATA[<h2 id="QuickSort"><a href="#QuickSort" class="headerlink" title="QuickSort"></a>QuickSort</h2><p>Bắt đầu series giải thuật . Trong bài viết này mình sẽ giới thiệu về  thuật toán : <a href="https://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_nhanh" target="_blank" rel="noopener">Quicksort</a></p><h3 id="QuickSort-la-gi"><a href="#QuickSort-la-gi" class="headerlink" title="QuickSort là gì ?"></a>QuickSort là gì ?</h3><p>Quick sort là : </p><ul><li>là một kiểu sắp xếp phân chia ( part sort )</li><li>là một thuật toán chia để trị ( divide and conquer ) giống với Merge Sort</li></ul><h3 id="Phan-tich"><a href="#Phan-tich" class="headerlink" title="Phân tích :"></a>Phân tích :</h3><p>Ý tưởng của quick sort trình bày như sau :   </p><ul><li>Mang tư tưởng  chia để trị  nên khác với các thuật toán sắp xếp khác  ta chia danh sách cần sắp xếp a[1,n] thành 2 phần bằng nhau.</li><li>2 phần này được xác định bởi so sánh các phần tử của danh sách với một phần tử chốt gọi là pivot hoặc key .</li><li>Ví dụ :với sắp xếp dãy tăng dần<ul><li>những phần tử nhỏ hơn hoặc bằng pivot sẽ được đưa về bên trái .</li><li>ngược lại về bên phải.</li></ul></li><li>Tiếp tục lặp lại cho đến khi các danh sách con có độ dài bằng 1.</li></ul><h3 id="Cach-chon-pivot"><a href="#Cach-chon-pivot" class="headerlink" title="Cách chọn pivot :"></a>Cách chọn pivot :</h3><p> Tùy theo các chọn pivot mà thuật toans quicksort có nhiều biến thể khác nhau .Dưới đây là 1 số cách chọn :</p><ul><li>Phần tử ở đầu.</li><li>Phần tử ở cuối.</li><li>Phần tử ở giữa.</li><li>Phần tử ngẫu nhiên ( ta sử dụng hàm random để chọn ).</li></ul><h3 id="Cach-chia"><a href="#Cach-chia" class="headerlink" title="Cách chia :"></a>Cách chia :</h3><p>Cách chia hiệu quả nhất là :</p><ul><li>Duyệt từ  2 đầu của dãy .</li><li>Tìm phần tử đầu tiên không thỏa mãn quy luật ở cả 2 đầu .</li><li>Đảo giá trị của 2 phần tử này cho nhau .</li><li>Lặp đến khi 2 đầu gặp nhau .</li></ul><img src="/2018/04/06/Quick-Sort/quickSort.png" title="quicksort"><h3 id="Ma-nguon"><a href="#Ma-nguon" class="headerlink" title="Mã nguồn :"></a>Mã nguồn :</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># enter input data</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quicksort</span><span class="params">(left, right)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> left &lt; right:</span><br><span class="line">        pivot = int((left + right) / <span class="number">2</span>)</span><br><span class="line">        x = left</span><br><span class="line">        y = right</span><br><span class="line">        <span class="keyword">while</span> x &lt;= y:</span><br><span class="line">            <span class="keyword">while</span> arr[x] &lt; arr[pivot]:</span><br><span class="line">                x += <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> arr[y] &gt; arr[pivot]:</span><br><span class="line">                y -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> x &lt;= y:</span><br><span class="line">                arr[x], arr[y] = arr[y], arr[x]</span><br><span class="line">                x += <span class="number">1</span></span><br><span class="line">                y -= <span class="number">1</span></span><br><span class="line">        <span class="comment"># if left &lt; y:</span></span><br><span class="line">        <span class="comment">#     quicksort(left, y)</span></span><br><span class="line">        <span class="comment"># if right &gt; x:</span></span><br><span class="line">        <span class="comment">#     quicksort(x, right)</span></span><br><span class="line">        <span class="keyword">if</span> left &lt; y:</span><br><span class="line">            quicksort(left, y)</span><br><span class="line">            quicksort(y+<span class="number">1</span>, right)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">quicksort(<span class="number">0</span>, len(arr) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(arr)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Quicksort </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Giới thiệu</title>
      <link href="/2018/04/04/Gioi-thieu/"/>
      <url>/2018/04/04/Gioi-thieu/</url>
      <content type="html"><![CDATA[<h2 id="Xin-chao"><a href="#Xin-chao" class="headerlink" title="Xin chào"></a>Xin chào</h2><h3 id="Mo-dau"><a href="#Mo-dau" class="headerlink" title="Mở đầu:"></a>Mở đầu:</h3><p>Cảm ơn các bạn đã ghé thăm blog nhỏ bé của mình .<br>Như đã giới thiệu <a href="/about"><em>ở đây</em></a>. Blog nho nhỏ này được mình xây dựng và duy trì với mục đích chia sẻ kiến thức và cũng giúp mình ôn tập lại kiến thức cũ .Mong các bạn đón nhật và ủng hộ Đây cũng là lần đầu mình viết blog nên văn có hơi lủng củng mong mọi người thông cảm <img class="github-emoji" style="display:inline;vertical-align:bottom" title="cry" alt="cry" src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f622.png?v8" height="20" width="20"></p><h3 id="Ma-nguon"><a href="#Ma-nguon" class="headerlink" title="Mã nguồn:"></a>Mã nguồn:</h3><p>Đây là 1 project opensource nên bạn có thể hoàn toàn tham khảo tại : <a href="http://github.com/shentury/blog" target="_blank" rel="noopener"><em> source code</em></a></p>]]></content>
      
      <categories>
          
          <category> .. </category>
          
      </categories>
      
      
        <tags>
            
            <tag> introduction </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
